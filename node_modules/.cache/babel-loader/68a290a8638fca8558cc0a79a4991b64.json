{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\anime\\\\src\\\\component\\\\store\\\\AnimeProvider.js\",\n    _s = $RefreshSig$();\n\nimport { React, useReducer } from 'react';\nimport AnimeContext from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  items: []\n};\n\nconst animeReducer = (state, action) => {\n  if (action.type === 'Watch') {\n    const findAnimeIndex = state.items.findIndex(item => item.id === action.item.id);\n    const findAnime = state.items[findAnimeIndex];\n    let updatedAnime;\n\n    if (findAnime) {\n      let sameAnimes = { ...findAnime\n      };\n      updatedAnime = [...state.items];\n      updatedAnime[findAnimeIndex] = sameAnimes;\n    } else {\n      updatedAnime = state.items.concat(action.item);\n    }\n\n    updatedAnime.map(a => {\n      a.aniType = 'watch';\n    });\n    return {\n      items: updatedAnime\n    };\n    console.log(action.item.name);\n  }\n\n  if (action.type === 'Hold') {\n    const findAnimeIndex = state.items.findIndex(item => item.id === action.item.id);\n    const findAnime = state.items[findAnimeIndex];\n    let updatedAnime;\n\n    if (findAnime) {\n      let sameAnimes = { ...findAnime\n      };\n      updatedAnime = [...state.items];\n      updatedAnime[findAnimeIndex] = sameAnimes;\n    } else {\n      updatedAnime = state.items.concat(action.item);\n    }\n\n    updatedAnime.map(a => {\n      a.aniType = 'hold';\n    });\n    return {\n      items: updatedAnime\n    };\n    console.log(action.item.name);\n  }\n\n  return defaultState;\n};\n\nexport default function AnimeProvider(props) {\n  _s();\n\n  const [animeState, dispatchAnime] = useReducer(animeReducer, defaultState);\n\n  const watchHandler = item => {\n    dispatchAnime({\n      type: 'Watch',\n      item: item\n    });\n  };\n\n  const holdHandler = item => {\n    dispatchAnime({\n      type: 'Hold',\n      item: item\n    });\n  }; // console.log(animeState.items)\n\n\n  const MyAnimeContext = {\n    items: animeState.items,\n    addItem: watchHandler,\n    addHold: holdHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AnimeContext.Provider, {\n    value: MyAnimeContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AnimeProvider, \"rZLHmuuc4/pOLYPMuZhojaKPEfk=\");\n\n_c = AnimeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeProvider\");","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/anime/src/component/store/AnimeProvider.js"],"names":["React","useReducer","AnimeContext","defaultState","items","animeReducer","state","action","type","findAnimeIndex","findIndex","item","id","findAnime","updatedAnime","sameAnimes","concat","map","a","aniType","console","log","name","AnimeProvider","props","animeState","dispatchAnime","watchHandler","holdHandler","MyAnimeContext","addItem","addHold","children"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,UAAd,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,WAAzB;;AACA,MAAMC,YAAY,GAAC;AAEfC,EAAAA,KAAK,EAAC;AAFS,CAAnB;;AAMA,MAAMC,YAAY,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC/B,MAAGA,MAAM,CAACC,IAAP,KAAc,OAAjB,EAAyB;AACrB,UAAMC,cAAc,GAACH,KAAK,CAACF,KAAN,CAAYM,SAAZ,CAAuBC,IAAD,IAAQA,IAAI,CAACC,EAAL,KAAUL,MAAM,CAACI,IAAP,CAAYC,EAApD,CAArB;AACA,UAAMC,SAAS,GAACP,KAAK,CAACF,KAAN,CAAYK,cAAZ,CAAhB;AACA,QAAIK,YAAJ;;AACA,QAAGD,SAAH,EAAa;AACT,UAAIE,UAAU,GAAC,EAAC,GAAGF;AAAJ,OAAf;AACAC,MAAAA,YAAY,GAAC,CAAC,GAAGR,KAAK,CAACF,KAAV,CAAb;AACAU,MAAAA,YAAY,CAACL,cAAD,CAAZ,GAA6BM,UAA7B;AACH,KAJD,MAKI;AACAD,MAAAA,YAAY,GAACR,KAAK,CAACF,KAAN,CAAYY,MAAZ,CAAmBT,MAAM,CAACI,IAA1B,CAAb;AACH;;AACAG,IAAAA,YAAY,CAACG,GAAb,CAAkBC,CAAD,IAAK;AAClBA,MAAAA,CAAC,CAACC,OAAF,GAAU,OAAV;AACH,KAFD;AAGD,WAAM;AACFf,MAAAA,KAAK,EAACU;AADJ,KAAN;AAGAM,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACI,IAAP,CAAYW,IAAxB;AACH;;AACD,MAAGf,MAAM,CAACC,IAAP,KAAc,MAAjB,EAAwB;AACpB,UAAMC,cAAc,GAACH,KAAK,CAACF,KAAN,CAAYM,SAAZ,CAAuBC,IAAD,IAAQA,IAAI,CAACC,EAAL,KAAUL,MAAM,CAACI,IAAP,CAAYC,EAApD,CAArB;AACA,UAAMC,SAAS,GAACP,KAAK,CAACF,KAAN,CAAYK,cAAZ,CAAhB;AACA,QAAIK,YAAJ;;AACA,QAAGD,SAAH,EAAa;AACT,UAAIE,UAAU,GAAC,EAAC,GAAGF;AAAJ,OAAf;AACAC,MAAAA,YAAY,GAAC,CAAC,GAAGR,KAAK,CAACF,KAAV,CAAb;AACAU,MAAAA,YAAY,CAACL,cAAD,CAAZ,GAA6BM,UAA7B;AACH,KAJD,MAKI;AACAD,MAAAA,YAAY,GAACR,KAAK,CAACF,KAAN,CAAYY,MAAZ,CAAmBT,MAAM,CAACI,IAA1B,CAAb;AACH;;AACAG,IAAAA,YAAY,CAACG,GAAb,CAAkBC,CAAD,IAAK;AAClBA,MAAAA,CAAC,CAACC,OAAF,GAAU,MAAV;AACH,KAFD;AAGD,WAAM;AACFf,MAAAA,KAAK,EAACU;AADJ,KAAN;AAGAM,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACI,IAAP,CAAYW,IAAxB;AACH;;AACD,SAAOnB,YAAP;AACH,CA1CD;;AA2CA,eAAe,SAASoB,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA2BzB,UAAU,CAACI,YAAD,EAAcF,YAAd,CAA3C;;AACA,QAAMwB,YAAY,GAAEhB,IAAD,IAAQ;AACvBe,IAAAA,aAAa,CAAC;AACVlB,MAAAA,IAAI,EAAC,OADK;AAEVG,MAAAA,IAAI,EAACA;AAFK,KAAD,CAAb;AAIH,GALD;;AAMA,QAAMiB,WAAW,GAAEjB,IAAD,IAAQ;AACtBe,IAAAA,aAAa,CAAC;AACVlB,MAAAA,IAAI,EAAC,MADK;AAEVG,MAAAA,IAAI,EAACA;AAFK,KAAD,CAAb;AAIH,GALD,CARyC,CAczC;;;AACA,QAAMkB,cAAc,GAAC;AACjBzB,IAAAA,KAAK,EAACqB,UAAU,CAACrB,KADA;AAEjB0B,IAAAA,OAAO,EAACH,YAFS;AAGjBI,IAAAA,OAAO,EAACH;AAHS,GAArB;AAKF,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC,cAA9B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzBuBT,a;;KAAAA,a","sourcesContent":["import {React,useReducer} from 'react'\r\nimport AnimeContext from './context'\r\nconst defaultState={\r\n\r\n    items:[],\r\n   \r\n    \r\n}\r\nconst animeReducer=(state,action)=>{\r\n    if(action.type==='Watch'){\r\n        const findAnimeIndex=state.items.findIndex((item)=>item.id===action.item.id)\r\n        const findAnime=state.items[findAnimeIndex];\r\n        let updatedAnime;\r\n        if(findAnime){\r\n            let sameAnimes={...findAnime};\r\n            updatedAnime=[...state.items];\r\n            updatedAnime[findAnimeIndex]=sameAnimes;\r\n        }\r\n        else{\r\n            updatedAnime=state.items.concat(action.item)\r\n        }\r\n         updatedAnime.map((a)=>{\r\n             a.aniType='watch'\r\n         })  \r\n        return{\r\n            items:updatedAnime\r\n        }\r\n        console.log(action.item.name)\r\n    }\r\n    if(action.type==='Hold'){\r\n        const findAnimeIndex=state.items.findIndex((item)=>item.id===action.item.id)\r\n        const findAnime=state.items[findAnimeIndex];\r\n        let updatedAnime;\r\n        if(findAnime){\r\n            let sameAnimes={...findAnime};\r\n            updatedAnime=[...state.items];\r\n            updatedAnime[findAnimeIndex]=sameAnimes;\r\n        }\r\n        else{\r\n            updatedAnime=state.items.concat(action.item)\r\n        }\r\n         updatedAnime.map((a)=>{\r\n             a.aniType='hold'\r\n         })  \r\n        return{\r\n            items:updatedAnime\r\n        }\r\n        console.log(action.item.name)\r\n    }\r\n    return defaultState;\r\n}\r\nexport default function AnimeProvider(props) {\r\n    const [animeState,dispatchAnime]=useReducer(animeReducer,defaultState)\r\n    const watchHandler=(item)=>{\r\n        dispatchAnime({\r\n            type:'Watch',\r\n            item:item\r\n        })\r\n    }\r\n    const holdHandler=(item)=>{\r\n        dispatchAnime({\r\n            type:'Hold',\r\n            item:item\r\n        })\r\n    }\r\n    // console.log(animeState.items)\r\n    const MyAnimeContext={\r\n        items:animeState.items,\r\n        addItem:watchHandler,\r\n        addHold:holdHandler\r\n    }\r\n  return (\r\n    <AnimeContext.Provider value={MyAnimeContext}>\r\n        {props.children}\r\n    </AnimeContext.Provider>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}