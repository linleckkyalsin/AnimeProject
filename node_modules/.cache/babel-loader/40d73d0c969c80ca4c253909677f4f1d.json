{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\anime\\\\src\\\\component\\\\RecoList.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport Axios from '../config/Axios';\nimport FilmList from './FilmList';\nimport classes from './RecoList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecoList(props) {\n  _s();\n\n  console.log(props.anime.genre); // Axios.get(`/anime?anime_id=${id}`).then((res)=>{\n  //   setData(res.data.data);\n  // });\n  // let genres=props.genre.filter((g)=>genreChecked.includes(g.id));\n  // let list=[];\n  //   updatedAnime.map((item)=>{\n  //    item.genre.map((g)=>{\n  //      if(genreChecked.includes(g.id)){\n  //        list.push(item)\n  //      }\n  //    })\n  //  })\n  //  let uniqueList=[];\n  //  if(list){\n  //    list.map((l)=>{\n  //      if(!uniqueList.includes(l)){\n  //        uniqueList.push(l)\n  //      }\n  //    })\n  //  }\n\n  const [ani, setAni] = useState([]);\n  useEffect(() => {\n    Axios.get(`/anime`).then(res => {\n      setAni(res.data.data);\n    });\n  }, [props.anime]);\n  let list = [];\n  let genres = [];\n  props.anime.genre.map(g => {\n    genres.push(g.id);\n  });\n  ani.map(item => {\n    item.genre.map(g => {\n      if (genres.includes(g.id)) {\n        list.push(item);\n      }\n    });\n  });\n  let unique = [];\n\n  if (list) {\n    list.map(l => {\n      if (!unique.includes(l)) {\n        unique.push(l);\n      }\n    });\n  }\n\n  console.log(unique);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['main-content'],\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes['block_area'],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes['block_area-header'],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes['bah-heading'],\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: classes['cat-heading'],\n              children: \"Recommend For You\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes['tab-content'],\n          children: /*#__PURE__*/_jsxDEV(FilmList, {\n            animes: []\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['main-sidebar']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecoList, \"U8EnBB3A7xTvno5sZXrWfUNkuiM=\");\n\n_c = RecoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecoList\");","map":{"version":3,"sources":["C:/Users/LENOVO/Documents/anime/src/component/RecoList.js"],"names":["React","useEffect","useState","Axios","FilmList","classes","RecoList","props","console","log","anime","genre","ani","setAni","get","then","res","data","list","genres","map","g","push","id","item","includes","unique","l","container"],"mappings":"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","sourcesContent":["import {React,useEffect,useState} from 'react'\r\nimport Axios from '../config/Axios'\r\nimport FilmList from './FilmList'\r\nimport classes from './RecoList.module.css'\r\nexport default function RecoList(props) {\r\n  console.log(props.anime.genre)\r\n  // Axios.get(`/anime?anime_id=${id}`).then((res)=>{\r\n  //   setData(res.data.data);\r\n  // });\r\n  // let genres=props.genre.filter((g)=>genreChecked.includes(g.id));\r\n    \r\n     \r\n  // let list=[];\r\n  //   updatedAnime.map((item)=>{\r\n  //    item.genre.map((g)=>{\r\n  //      if(genreChecked.includes(g.id)){\r\n  //        list.push(item)\r\n  //      }\r\n  //    })\r\n  //  })\r\n  //  let uniqueList=[];\r\n  //  if(list){\r\n  //    list.map((l)=>{\r\n  //      if(!uniqueList.includes(l)){\r\n  //        uniqueList.push(l)\r\n  //      }\r\n  //    })\r\n  //  }\r\nconst [ani,setAni]=useState([])\r\n  useEffect(() => {\r\n     Axios.get(`/anime`).then((res)=>{\r\n       setAni(res.data.data)\r\n     })\r\n  }, [props.anime])\r\n  let list=[];\r\n  let genres=[];\r\n  props.anime.genre.map((g)=>{\r\n    genres.push(g.id)\r\n  })\r\n  ani.map((item)=>{\r\n    item.genre.map((g)=>{\r\n      if(genres.includes(g.id)){\r\n        list.push(item)\r\n      }\r\n    })\r\n  })\r\n  let unique=[];\r\n  if(list){\r\n    list.map((l)=>{\r\n      if(!unique.includes(l)){\r\n        unique.push(l)\r\n      }\r\n    })\r\n  }\r\n  console.log(unique)\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes['main-content']}>\r\n         <section className={classes['block_area']}>\r\n           <div className={classes['block_area-header']}>\r\n             <div className={classes['bah-heading']}>\r\n               <h2 className={classes['cat-heading']}>Recommend For You</h2>\r\n             </div>\r\n           </div>\r\n           <div className={classes['tab-content']}>\r\n             <FilmList animes={[]}></FilmList>\r\n           </div>\r\n         </section>\r\n\r\n      </div>\r\n      <div className={classes['main-sidebar']}></div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}